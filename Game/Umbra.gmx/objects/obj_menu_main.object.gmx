<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Properties
menu1[0] = "Start Game";
menu1[1] = "Quit";
space = 80;
mpos = 0;
pushed = 0;
push = snd_main_menu_01;
//Sprites
instance_create(0,0,obj_umbra_logo)
//instance_create(0,0,obj_bar_select);
//instance_create(room_width/2,room_height/2,obj_purple_clouds);
//instance_create(0,0,obj_border);
instance_create(room_width/2,room_height/2,obj_newgame);
instance_create(room_width/2,room_height/2+obj_newgame.sprite_height,obj_quit);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Functionality
var move = 0;
move -= max(keyboard_check_pressed(vk_up),0);
move += max(keyboard_check_pressed(vk_down),0);

if (move != 0)
{
    mpos += move;
    if (mpos &lt; 0)
    mpos = array_length_1d(menu1) - 1;
    if (mpos &gt; array_length_1d(menu1) - 1)
    mpos = 0;
}

var push;
push = max(keyboard_check_released(vk_enter),0)
if (push == 1 &amp;&amp; pushed == 0)
{
pushed = 1;
scr_menu_main();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Background Anim

while (instance_number(obj_purple_clouds)&lt;20)
instance_create(0,0,obj_purple_clouds);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation of menu
draw_set_color(c_white);
if (mpos == 0)
{
draw_sprite_ext(spr_menu_arrow,0,obj_newgame.x-((obj_newgame.bbox_right-obj_newgame.bbox_left)/2),obj_newgame.y,obj_newgame.image_xscale/4,obj_newgame.image_yscale/4,0,c_white,1);
draw_sprite_ext(spr_menu_arrow,0,obj_newgame.x+((obj_newgame.bbox_right-obj_newgame.bbox_left)/2),obj_newgame.y,obj_newgame.image_xscale/4,obj_newgame.image_yscale/4,180,c_white,1);
}
if (mpos == 1)
{
draw_sprite_ext(spr_menu_arrow,0,obj_quit.x-((obj_quit.bbox_right-obj_quit.bbox_left)/2),obj_quit.y,obj_quit.image_xscale/4,obj_quit.image_yscale/4,0,c_white,1);
draw_sprite_ext(spr_menu_arrow,0,obj_quit.x+((obj_quit.bbox_right-obj_quit.bbox_left)/2),obj_quit.y,obj_quit.image_xscale/4,obj_quit.image_yscale/4,180,c_white,1);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
