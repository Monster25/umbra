<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>healthbar_w = 100;
healthbar_h = 20;

drawbar_w = 70;
drawbar_h = 10;

healthbar_pos_x = window_get_width()/2;
healthbar_pos_y = window_get_height()-window_get_height()/4;

drawbar_pos_x = window_get_width()/2;
drawbar_pos_y = window_get_height()-window_get_height()/4+drawbar_h*2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_set_color(c_red);
pc = (obj_player.hp / obj_player.max_hp)*100;
draw_healthbar(healthbar_pos_x-healthbar_w/2,healthbar_pos_y-healthbar_h/2,healthbar_pos_x+healthbar_w/2,healthbar_pos_y+healthbar_h/2,pc,c_gray,c_red,c_green,0,1,1);
pc2 = obj_player.draw *100;
//draw_set_color(c_white);
draw_healthbar(drawbar_pos_x-drawbar_w/2,drawbar_pos_y-drawbar_h/2,drawbar_pos_x+drawbar_w/2,drawbar_pos_y+drawbar_h/2,pc2,c_gray,c_white,c_white,0,0,1);
draw_set_halign(fa_center)
draw_set_valign(fa_middle)
draw_set_color(c_white)
draw_set_font(fnt_debug)
draw_text(drawbar_pos_x,drawbar_pos_y+drawbar_h*4,"Arrow Type: "+string(obj_game_control.arrow[obj_player.arrow_type,9]));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
