<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Test states
with (obj_player)
draw_set_font(fnt_debug);
draw_text(100,100,string(obj_player.state_name));
draw_text(100,120,string(obj_player.hsp));
draw_text(100,140,string(obj_player.vsp));
draw_text(100,160,"Number of wall objects: "+string(instance_number(obj_wall)));
draw_text(100,180,"Number of trees: "+string(obj_game_control.level[obj_game_control.current_level,2]));
draw_text(100,200,"Actual tree objects: "+string(instance_number(obj_tree)));
draw_text(100,220,string(obj_player.x))
draw_text(100,240,string(obj_player.y));
draw_text(100,260,"Current Level: "+string(obj_game_control.current_level));
draw_text(100,280,"Player Health: "+string(obj_player.hp));
draw_text(100,300,"Time (seconds): "+string(obj_game_control.time));
draw_text(100,320,"Draw Range: "+string(obj_player.arrow_range));
draw_text(100,340,"Draw speed: "+string(obj_player.arrow_speed));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_grid))
{
draw_set_alpha(0.2);
//mp_grid_draw(grid);
draw_set_alpha(1);
with (obj_grid)
{
draw_set_alpha(0.2);
draw_set_colour(c_blue);
for (var i = 0; i &lt; room_width; i += cell_width;)
    {
    draw_line_width(i, 0, i, room_height, 3);
    }
for (var j = 0; j &lt; room_width; j += cell_height;)
    {
    draw_line_width(0, j, room_width, j, 3);
    }
draw_set_alpha(1);
}
}


for (var j = 0;j&lt;instance_number(obj_tree);j++)
{
tree_debug[j] = instance_find(obj_tree,j);
draw_text(tree_debug[j].x+32,tree_debug[j].y+32,j)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (visible = 1)
visible = 0;
else
visible = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_next_level();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
